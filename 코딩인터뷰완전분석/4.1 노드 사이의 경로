#include <iostream>
#include <vector>

using namespace std;

vector<int> a[1010];
bool check[1010];

int from, to;
bool isReachable = false; 

void dfs(int num) {

	check[num] = true;
	if (num == to) {
		isReachable = true;
		return; 
	}

	for (int i = 0; i < a[num].size(); i++) {
			int y = a[num][i];
			if (check[y] == false) {
				dfs(y);
			}
	}

}

int main() {
	
	memset(check, false, sizeof(check));

	int N, M, V;
	cin >> N >> M;

	for (int i = 1; i <= M; i++) {
		int u, v;
		cin >> u >> v;
		a[u].push_back(v);
		a[v].push_back(u);
	}

	cin >> from >> to;

	dfs(from);

	if (isReachable == true) {
		cout << "경로가 존재함";
	}
	else {
		cout << "경로가 존재하지 않음";
	}

}
