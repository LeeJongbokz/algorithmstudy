#include <iostream>
#include <vector>

using namespace std;

class Node {
public:
	int data;
	Node* next;
};

Node* push(Node** head_ref, int new_data) {

	Node* new_node = new Node();
	new_node->data = new_data;
	new_node->next = *head_ref;
	*head_ref = new_node;

	return new_node;

}

void searchNode(Node* node, int k) {

	int cnt = 0; 
	Node* previous = NULL;

	while (node != NULL) {
		cnt += 1;

		if (cnt == k) {
			if (k == 1) {
				previous = node;
				node = node->next;
				break;
			}
			else {
				previous->next = node->next;
				break;
			}
		}
		else {
			previous = node;
			node = node->next;
		}

	}

	if (k == 1) {
		previous->next = NULL;
	}



}

void printNode(Node* node) {

	while (node != NULL) {
		cout << node->data << " ";
		node = node->next;
	}
}

void deletethisNode(Node* node) {
	node->data = node->next->data;
	node->next = node->next->next;
}

int main() {

	Node* head = NULL;

	push(&head, 3);
	Node* deleteNode = push(&head, 7);
	push(&head, 8);
	push(&head, 10);

	printNode(head);
	cout << '\n';
	deletethisNode(deleteNode);
	printNode(head);

}



